name: ci-cd

on:
  push:
    branches: ["main"]

permissions:
  id-token: write
  contents: read

env:
  ACR_NAME: abfabacr1234 # = var.acr_name (mets le même)
  TF_WORKING_DIR: infra
  TF_BACKEND_RG: tfstate-rg # ceux créés en 0.2
  TF_BACKEND_STORAGE: abfabtfstate1490451286 # remplace par le nom réel
  TF_BACKEND_CONTAINER: tfstate
  TF_STATE_KEY: abfab.tfstate

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get ACR login server
        id: acr
        run: echo "LOGIN_SERVER=${{ env.ACR_NAME }}.azurecr.io" >> $GITHUB_OUTPUT

      - name: Docker login to ACR
        uses: azure/docker-login@v2
        with:
          login-server: ${{ steps.acr.outputs.LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & Push backend image
        run: |
          docker build -t ${{ steps.acr.outputs.LOGIN_SERVER }}/abfab-backend:${{ github.sha }} -f backendBet/Dockerfile backendBet
          docker push ${{ steps.acr.outputs.LOGIN_SERVER }}/abfab-backend:${{ github.sha }}

      - name: Build & Push frontend image
        run: |
          docker build -t ${{ steps.acr.outputs.LOGIN_SERVER }}/abfab-frontend:${{ github.sha }} -f frontendBet/Dockerfile frontendBet
          docker push ${{ steps.acr.outputs.LOGIN_SERVER }}/abfab-frontend:${{ github.sha }}

  terraform-apply:
    needs: build-and-push
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (remote state)
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ env.TF_BACKEND_RG }}" \
            -backend-config="storage_account_name=${{ env.TF_BACKEND_STORAGE }}" \
            -backend-config="container_name=${{ env.TF_BACKEND_CONTAINER }}" \
            -backend-config="key=${{ env.TF_STATE_KEY }}"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Apply
        env:
          TF_VAR_pg_admin_password: ${{ secrets.DB_ADMIN_PASSWORD }}
          TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
          TF_VAR_acr_name: ${{ env.ACR_NAME }}
        run: |
          terraform apply -auto-approve \
            -var "image_tag=${{ github.sha }}"
